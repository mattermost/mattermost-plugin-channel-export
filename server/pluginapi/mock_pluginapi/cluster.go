// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mattermost/mattermost-plugin-channel-export/server/pluginapi (interfaces: Cluster)

// Package mock_pluginapi is a generated GoMock package.
package mock_pluginapi

import (
	gomock "github.com/golang/mock/gomock"
	pluginapi "github.com/mattermost/mattermost-plugin-channel-export/server/pluginapi"
	reflect "reflect"
)

// MockCluster is a mock of Cluster interface
type MockCluster struct {
	ctrl     *gomock.Controller
	recorder *MockClusterMockRecorder
}

// MockClusterMockRecorder is the mock recorder for MockCluster
type MockClusterMockRecorder struct {
	mock *MockCluster
}

// NewMockCluster creates a new mock instance
func NewMockCluster(ctrl *gomock.Controller) *MockCluster {
	mock := &MockCluster{ctrl: ctrl}
	mock.recorder = &MockClusterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCluster) EXPECT() *MockClusterMockRecorder {
	return m.recorder
}

// NewMutex mocks base method
func (m *MockCluster) NewMutex(arg0 string) (pluginapi.ClusterMutex, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewMutex", arg0)
	ret0, _ := ret[0].(pluginapi.ClusterMutex)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewMutex indicates an expected call of NewMutex
func (mr *MockClusterMockRecorder) NewMutex(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewMutex", reflect.TypeOf((*MockCluster)(nil).NewMutex), arg0)
}
